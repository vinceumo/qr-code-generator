{"version":3,"sources":["Components/Organisms/AppFooter.js","Components/Organisms/AppHeader.js","Components/Organisms/AppNav.js","Components/Molecules/QrCodeOutputSvg.js","Components/Molecules/ContactInput.js","Components/Molecules/TextInput.js","Components/Molecules/UrlInput.js","Components/Molecules/QrCodeInputData.js","Components/Organisms/QrCodeGenerator.js","Components/Organisms/QrCodeScanner.js","Components/Organisms/QrCodeScannerResult.js","App.js","serviceWorker.js","index.js"],"names":["AppFooter","react_default","a","createElement","className","href","AppHeader","AppNav","react_router_dom","exact","to","process","activeClassName","QrCodeOutput","props","_useState","useState","_useState2","Object","slicedToArray","qrCode","setQrCode","_useState3","_useState4","svgUrl","setSvgUrl","CreateQRCode","qrCodeData","qrcode","addData","data","make","svg","svgBlob","Blob","createSvgTag","type","svgUrlData","URL","createObjectURL","CreateSvgUrl","useEffect","dangerouslySetInnerHTML","__html","concat","download","ContactInput","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","values","keys","inputs","forEach","key","i","value","SetMsg","CreateVCard","UpdateContactInputStates","_this2","cardContent","vCardType","UpdateVCardValue","_this3","map","htmlFor","label","ref","input","inputType","name","id","defaultValue","onChange","e","React","Component","TextInput","currentValue","target","UrlInput","QrCodeInputData","msg","setState","SetQrCodeMsg","inputValues","assign","state","contact","OnRadioInputChange","inputToRender","currentTarget","radios","text","url","fullName","organisation","title","phone","email","Molecules_TextInput","Molecules_UrlInput","Molecules_ContactInput","radio","checked","InputToReturn","QrCodeGenerator","setMsg","Components_Molecules_QrCodeInputData","QrCodeOutputSvg","QrCodeScanner","canvas","videoRef","useRef","canvasRef","constraints","audio","video","facingMode","noCameraAccess","setNoCameraAccess","checkFrame","image","current","getContext","height","clientHeight","width","clientWidth","drawImage","getImageData","imageData","code","jsQR","inversionAttempts","history","push","pathname","requestAnimationFrame","navigator","mediaDevices","getUserMedia","then","stream","srcObject","successStream","catch","error","console","log","failureStream","Fragment","hidden","muted","playsInline","autoPlay","QrCodeScannerResult","location","msgType","regexVcard","regexUrl","test","encodeURIComponent","replace","escape","unescape","App","Organisms_AppHeader","Organisms_AppNav","react_router","path","component","Organisms_AppFooter","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7b90ba7e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AppFooter() {\r\n  return (\r\n    <footer className=\"has-bg-dark\">\r\n      <div className=\"container has-py-2\">\r\n        <p>\r\n          <a href=\"https://github.com/vinceumo/qr-code-generator\">See project on github</a>\r\n        </p>\r\n        <p>\r\n          <a href=\"https://www.vincent-humeau.com\">vincent-humeau.com</a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default AppFooter;","import React from \"react\";\r\nimport \"./AppHeader.scss\"\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <header className=\"has-bg-dark\">\r\n      <div className=\"container has-py-2\">\r\n        <h1 className=\"has-my-1\">QR Code</h1>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\r\nimport \"./AppNav.scss\";\r\n\r\nfunction AppNav() {\r\n  return (\r\n    <nav className=\"has-bg-dark\">\r\n      <div className=\"container\">\r\n        <ul className=\"list-unstyled has-m-0 navigation\">\r\n          <li>\r\n            <NavLink exact to={process.env.PUBLIC_URL + \"/\"} className=\"btn has-py-1\" activeClassName=\"is-light\">\r\n              Scanner\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={process.env.PUBLIC_URL + \"/generator\"} className=\"btn has-py-1\" activeClassName=\"is-light\">\r\n              Generator\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AppNav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport qrcode from \"qrcode-generator-es6\";\r\n\r\nfunction QrCodeOutput(props) {\r\n  const [qrCode, setQrCode] = useState(null);\r\n  const [svgUrl, setSvgUrl] = useState(null);\r\n\r\n  function CreateQRCode() {\r\n    const qrCodeData = new qrcode(0, \"H\");\r\n    qrCodeData.addData(props.data);\r\n    qrCodeData.make();\r\n    setQrCode(qrCodeData);\r\n    CreateSvgUrl(qrCodeData);\r\n  }\r\n\r\n  function CreateSvgUrl(svg) {\r\n    const svgBlob = new Blob([svg.createSvgTag({})], {\r\n      type: \"image/svg+xml;charset=utf-8\"\r\n    });\r\n    const svgUrlData = URL.createObjectURL(svgBlob);\r\n    setSvgUrl(svgUrlData);\r\n  }\r\n\r\n  function renderQrCode() {\r\n    if (qrCode) {\r\n      return (\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: `${qrCode.createSvgTag({})}`\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <div/>\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    CreateQRCode();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {renderQrCode()}\r\n      <a href={svgUrl} download=\"qrCode\" className=\"btn is-dark\">\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QrCodeOutput;","import React from \"react\";\r\n\r\nclass ContactInput extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  UpdateVCardValue() {\r\n    let values = {};\r\n\r\n    Object.keys(this.props.inputs).forEach((key, i) => {\r\n      if (this[key].value !== \"\") values[key] = this[key].value;\r\n    });\r\n\r\n    this.props.SetMsg(this.CreateVCard(values), \"contact\");\r\n    this.props.UpdateContactInputStates(values);\r\n  }\r\n\r\n  CreateVCard(values) {\r\n    let cardContent = \"\";\r\n\r\n    Object.keys(values).forEach((key, i) => {\r\n      cardContent += `${this.props.inputs[key].vCardType}${values[key]}\\n`;\r\n    });\r\n\r\n    return `BEGIN:VCARD\r\nVERSION:4.0\r\n${cardContent}\r\nEND:VCARD`;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.UpdateVCardValue();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {Object.keys(this.props.inputs).map((key, i) => (\r\n          <div key={i}>\r\n            <label htmlFor=\"contactContentInputName\">\r\n              {this.props.inputs[key].label}:\r\n            </label>\r\n            <input\r\n              ref={input => (this[key] = input)}\r\n              type={this.props.inputs[key].inputType}\r\n              name=\"contactQrContent\"\r\n              id={`contactContentInput${this.props.inputs[key].vCardType}`}\r\n              defaultValue={this.props.inputs[key].value}\r\n              onChange={e => this.UpdateVCardValue()}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactInput;\r\n","import React from \"react\";\r\n\r\nfunction TextInput(props) {\r\n  return (\r\n    <div>\r\n    <label htmlFor=\"textInput\">Text: </label>\r\n      <textarea\r\n        id=\"textInput\"\r\n        defaultValue={props.currentValue}\r\n        onChange={e => props.SetMsg(e.target.value, \"text\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;","import React from \"react\";\r\n\r\nfunction UrlInput(props) {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"urlQrContentInput\">URL: </label>\r\n      <input\r\n        type=\"url\"\r\n        name=\"urlQrContent\"\r\n        id=\"urlQrContentInput\"\r\n        defaultValue={props.currentValue}\r\n        onChange={e => props.SetMsg(e.target.value, \"url\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UrlInput;\r\n","import React from 'react';\r\nimport ContactInput from \"./ContactInput\";\r\nimport TextInput from './TextInput';\r\nimport UrlInput from \"./UrlInput\";\r\nimport \"./QrCodeInputData.scss\";\r\n\r\nclass QrCodeInputData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.radios = [\"text\", \"url\", \"contact\"];\r\n    this.state = {\r\n      inputToRender: \"text\",\r\n      msg: \"\",\r\n      inputValues: {\r\n        text: \"\",\r\n        url: \"https://\",\r\n        contact: {\r\n          fullName: {\r\n            label: \"Full Name\",\r\n            inputType: \"text\",\r\n            vCardType: \"FN:\",\r\n            value: \"\"\r\n          },\r\n          organisation: {\r\n            label: \"Organisation\",\r\n            inputType: \"text\",\r\n            vCardType: \"ORG:\",\r\n            value: \"\"\r\n          },\r\n          title: {\r\n            label: \"Title\",\r\n            inputType: \"text\",\r\n            vCardType: \"TITLE:\",\r\n            value: \"\"\r\n          },\r\n          phone: {\r\n            label: \"Phone number\",\r\n            inputType: \"tel\",\r\n            vCardType: \"TEL;voice;VALUE=uri:tel:\",\r\n            value: \"\"\r\n          },\r\n          email: {\r\n            label: \"Email\",\r\n            inputType: \"email\",\r\n            vCardType: \"EMAIL:\",\r\n            value: \"\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  SetMsg = (msg, inputType) => {\r\n    this.setState({ msg });\r\n    this.props.SetQrCodeMsg(msg);\r\n\r\n    if (inputType !== \"contact\") {\r\n      let inputValues = Object.assign({}, this.state.inputValues);\r\n      inputValues[inputType] = msg;\r\n      this.setState({ inputValues });\r\n    }\r\n  };\r\n\r\n  UpdateContactInputStates = (values) => {\r\n    let inputValues = Object.assign({}, this.state.inputValues);\r\n\r\n    Object.keys(inputValues.contact).forEach((key, i) => {\r\n      inputValues.contact[key].value = values[key];\r\n    });\r\n    this.setState({ inputValues });\r\n  }\r\n\r\n  OnRadioInputChange = e => {\r\n    this.setState({\r\n      inputToRender: e.currentTarget.value\r\n    });\r\n\r\n    this.SetMsg(\r\n      this.state.inputValues[e.currentTarget.value],\r\n      e.currentTarget.value\r\n    );\r\n  };\r\n\r\n  InputToReturn() {\r\n    switch (this.state.inputToRender) {\r\n      case \"text\":\r\n        return (\r\n          <TextInput\r\n            SetMsg={this.SetMsg}\r\n            currentValue={this.state.inputValues.text}\r\n          />\r\n        );\r\n      case \"url\":\r\n        return (\r\n          <UrlInput\r\n            SetMsg={this.SetMsg}\r\n            currentValue={this.state.inputValues.url}\r\n          />\r\n        );\r\n      case \"contact\":\r\n        return (\r\n          <ContactInput\r\n            UpdateContactInputStates={this.UpdateContactInputStates}\r\n            SetMsg={this.SetMsg}\r\n            inputs={this.state.inputValues.contact}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <TextInput\r\n            SetMsg={this.SetMsg}\r\n            currentValue={this.state.inputValues.text}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-picker has-mb-4\">\r\n          {this.radios.map((radio, i) => (\r\n            <label\r\n              key={i}\r\n              className=\"input-label\"\r\n              htmlFor={`radio${radio}`}\r\n            >\r\n              <input\r\n                type=\"radio\"\r\n                value={radio}\r\n                checked={this.state.inputToRender === radio}\r\n                name=\"inputFormat\"\r\n                id={`radio${radio}`}\r\n                onChange={this.OnRadioInputChange}\r\n              />\r\n              {radio}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {this.InputToReturn()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeInputData;","import React, { useState } from \"react\";\r\nimport QrCodeOutput from \"../Molecules/QrCodeOutputSvg\";\r\nimport QrCodeInputData from \"../Molecules/QrCodeInputData\";\r\nimport \"./QrCodeGenerator.scss\";\r\n\r\nfunction QrCodeGenerator () {\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"container qrcodegen-container\">\r\n      <QrCodeInputData text={msg} SetQrCodeMsg={setMsg} />\r\n      <QrCodeOutput data={msg} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QrCodeGenerator;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport jsQR from \"jsqr\";\r\nimport \"./QrCodeScanner.scss\";\r\n\r\nfunction QrCodeScanner(props) {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const constraints = { audio: false, video: { facingMode: \"environment\" } };\r\n  let canvas;\r\n  const [noCameraAccess, setNoCameraAccess] = useState(false);\r\n\r\n  function imageData() {\r\n    if(!canvas) {\r\n      canvas = canvasRef.current.getContext(\"2d\");\r\n    }\r\n\r\n    if(videoRef.current) {\r\n      canvasRef.current.height = videoRef.current.clientHeight;\r\n      canvasRef.current.width = videoRef.current.clientWidth;\r\n  \r\n      canvas.drawImage(\r\n        videoRef.current,\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n  \r\n      var image = canvas.getImageData(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n  \r\n      return image;\r\n    }\r\n  }\r\n\r\n  function checkFrame() {\r\n    const image = imageData();\r\n\r\n    if(image) {\r\n      var code = jsQR(image.data, image.width, image.height, {\r\n        inversionAttempts: \"dontInvert\"\r\n      });\r\n  \r\n      if (code) {\r\n        props.history.push({pathname: `${process.env.PUBLIC_URL}/scanner-result`, state: { msg: code.data}});\r\n      }\r\n      requestAnimationFrame(checkFrame);\r\n    }\r\n  }\r\n\r\n  function successStream(stream) {\r\n    setNoCameraAccess(false);\r\n    videoRef.current.srcObject = stream;\r\n    requestAnimationFrame(checkFrame);\r\n  }\r\n\r\n  function failureStream(error) {\r\n    setNoCameraAccess(true);\r\n    console.log(error);\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n    .then((stream) => {\r\n      successStream(stream);\r\n    }).catch((error) => {\r\n      failureStream(error);\r\n    });\r\n  });\r\n\r\n  const renderVideo = function(){\r\n    if (!noCameraAccess) {\r\n      return (\r\n        <>\r\n          <canvas ref={canvasRef} hidden id=\"canvas\" />\r\n          <video ref={videoRef} muted playsInline autoPlay />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <p>\r\n          Please grant access to your camera and reload the page\r\n        </p>\r\n      )\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container qrcodescanner-container\">\r\n      <h2>Scan a QR code</h2>\r\n      {renderVideo()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QrCodeScanner;","import React from \"react\";\r\n\r\nfunction QrCodeScannerResult(props) {\r\n  const msg = props.location.state.msg;\r\n  let msgType = \"\";\r\n  const regexVcard = /BEGIN:VCARD/;\r\n  // eslint-disable-next-line\r\n  const regexUrl = /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/ig;\r\n\r\n  if (regexVcard.test(msg) && regexUrl.test(msg)) {\r\n    msgType = \"vcard\";\r\n  } else if (regexVcard.test(msg) && !regexUrl.test(msg)) {\r\n    msgType = \"vcard\";\r\n  } else if (!regexVcard.test(msg) && regexUrl.test(msg)) {\r\n    msgType = \"url\";\r\n  } else {\r\n    msgType = \"text\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {(() => {\r\n        switch (msgType) {\r\n          case \"vcard\":\r\n            return (\r\n              <>\r\n                <p>{msg}</p>\r\n                <a\r\n                  className=\"btn is-dark\"\r\n                  href={`data:,${encodeURIComponent(msg)\r\n                    .replace(/['()]/g, escape)\r\n                    .replace(/\\*/g, \"%2A\")\r\n                    .replace(/%(?:7C|60|5E)/g, unescape)}`}\r\n                  download=\"contact.vcf\"\r\n                >\r\n                  Save Contact\r\n                </a>\r\n              </>\r\n            );\r\n            // eslint-disable-next-line\r\n            break;\r\n          case \"url\":\r\n            return (\r\n              <>\r\n                <p>{msg}</p>\r\n                <a className=\"btn is-dark\" href={msg}>\r\n                  Visit link\r\n                </a>\r\n              </>\r\n            );\r\n            // eslint-disable-next-line\r\n            break;\r\n          default:\r\n            return (\r\n              <>\r\n                <p>{msg}</p>\r\n              </>\r\n            );\r\n            // eslint-disable-next-line\r\n            break;\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QrCodeScannerResult;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AppFooter from \"./Components/Organisms/AppFooter\";\r\nimport AppHeader from \"./Components/Organisms/AppHeader\";\r\nimport AppNav from \"./Components/Organisms/AppNav\";\r\nimport QrCodeGenerator from \"./Components/Organisms/QrCodeGenerator\";\r\nimport QrCodeScanner from \"./Components/Organisms/QrCodeScanner\";\r\nimport QrCodeScannerResult from \"./Components/Organisms/QrCodeScannerResult\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app-wrapper\">\r\n        <div>\r\n          <AppHeader />\r\n          <AppNav />\r\n        </div>\r\n        <main className=\"has-py-3\">\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={QrCodeScanner} />\r\n            <Route path={process.env.PUBLIC_URL + \"/scanner-result\"} component={QrCodeScannerResult} />\r\n            <Route path={process.env.PUBLIC_URL + \"/generator\"} exact component={QrCodeGenerator} />\r\n          </Switch>\r\n        </main>\r\n        <AppFooter />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}